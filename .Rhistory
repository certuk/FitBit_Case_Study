knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(tidymodels)
library(lubridate)
library(janitor)
library(ggrepel)
library(skimr)
library(kableExtra)
library(readr)
library(lubridate)
library(openair)
library(psych)
library(DataExplorer)
library(ggpubr)
library(here)
library(formattable)
library(scales)
library(dygraphs)
library(xts)
library(GGally)
setwd("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16")
daily_activity<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
daily_calories<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv")
daily_intensities<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv")
weightloginfo<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
daily_steps<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv")
hourly_calories<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv")
hourly_intensities<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv")
hourly_steps<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv")
heartrate_seconds<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/heartrate_seconds_merged.csv")
daily_sleep<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv")
minute_mets<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/minuteMETsNarrow_merged.csv")
#Gathering all datas in a list to analyse all in once:
df_list<-list(daily_activity,daily_calories,daily_intensities,daily_sleep,daily_steps,hourly_calories,hourly_intensities,hourly_steps,weightloginfo,heartrate_seconds,minute_mets)
#Finding distinct_id values
Distinct_id<-df_list |> map(c(1)) |> map_int(n_distinct)
#Finding missing rows
Missing_row <-df_list |>  map_int(n_missing)
#Finding duplicated values
Duplicated_Values<-vector(length = length(df_list))
for(i in 1:length(df_list)){
Duplicated_Values[i]=sum(duplicated(df_list[[i]]))
}
uniq<-data.frame(c("daily_activity","daily_calories","daily_intensities","daily_sleep","daily_steps","hourly_calories","hourly_intensities","hourly_steps","weightloginfo","heartrate_seconds","minute_mets"),Distinct_id,Missing_row,Duplicated_Values)
uniq<-uniq%>% rename(Data_set=colnames(uniq[1]))%>%arrange(-Distinct_id)
kbl(uniq, escape = F) %>%
kable_paper("hover", full_width = F)
#Removing duplicated values in daily_sleep
daily_sleep<-distinct(daily_sleep)
head(daily_activity,5)
str(daily_activity)
head(daily_calories,5)
str(daily_calories)
head(daily_intensities,5)
str(daily_intensities)
head(daily_steps,5)
str(daily_steps)
daily_activity<-daily_activity %>% mutate(ActivityDate=mdy(ActivityDate)) %>% mutate(weekday=wday(ActivityDate,abbr = FALSE, label=TRUE, locale = "EN"))
daily_calories<-daily_calories %>% mutate(ActivityDay=mdy(ActivityDay))%>% mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_intensities<-daily_intensities %>% mutate(ActivityDay=mdy(ActivityDay))%>%mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_sleep<-daily_sleep %>% mutate(SleepDay=mdy_hms(SleepDay)) %>% mutate(weekday=wday(SleepDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_steps<-daily_steps %>% mutate(ActivityDay=mdy(ActivityDay)) %>% mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
hourly_calories<-hourly_calories %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour, abbr = FALSE, label=TRUE, locale = "EN"))
hourly_intensities<-hourly_intensities %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour,,abbr = FALSE, label=TRUE, locale = "EN"))
hourly_steps<-hourly_steps %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour, abbr = FALSE,label=TRUE, locale = "EN"))
heartrate_seconds<-heartrate_seconds %>% mutate(Time=mdy_hms(Time)) %>% mutate(Hour=hour(Time),weekday=wday(Time,abbr = FALSE, label=TRUE, locale = "EN"))
daily_mets<-minute_mets |> mutate(ActivityMinute=mdy_hms(ActivityMinute)) |> mutate(ActivityMinute=date(ActivityMinute))|>  mutate(weekday=wday(ActivityMinute,abbr = FALSE, label=TRUE, locale = "EN")) |> rename(date=ActivityMinute) |>
group_by(Id,date) |> summarise(average_daily_mets=round(mean(METs),digits = 0), .groups = "keep")
hourly_mets<-minute_mets |> mutate(ActivityMinute=mdy_hms(ActivityMinute))|> mutate(ActivityMinute=date(ActivityMinute)) |> mutate(hour=hour(ActivityMinute))|>  mutate(weekday=wday(ActivityMinute,abbr = FALSE, label=TRUE, locale = "EN")) |> rename(date=ActivityMinute) |>
group_by(Id,,date,hour) |> summarise(average_hourly_mets=round(mean(METs),digits = 0), .groups = "keep")
#Also we can name the all date columns with same name to make the merging process easy.
daily_activity <-daily_activity |> rename(date=ActivityDate)
daily_calories<-daily_calories |> rename(date=ActivityDay)
daily_intensities<-daily_intensities |> rename(date=ActivityDay)
daily_sleep<-daily_sleep |> rename(date=SleepDay)
daily_steps<-daily_steps |> rename(date=ActivityDay)
dt<- daily_steps[1:5,]
dt
intersect_daily_activity_intensties<- intersect(colnames(daily_activity),colnames(daily_intensities))
intersect_daily_calories<-intersect(colnames(daily_activity),colnames(daily_calories))
daily_steps<-daily_steps |> rename(TotalSteps=StepTotal)
intersect_daily_steps<-intersect(colnames(daily_activity),colnames(daily_steps))
intersect_daily_activity_intensties
intersect_daily_calories
#Let's select the identical columns from both data frame
sc_daily_activity<-daily_activity |> select(intersect_daily_activity_intensties)
sc_daily_intensities<-daily_intensities |> select(intersect_daily_activity_intensties)
sc_daily_calories<-daily_calories |> select(intersect_daily_calories)
sc_daily_activity_calories<-daily_activity |> select(intersect_daily_calories)
sc_daily_steps<-daily_steps |> select(intersect_daily_steps)
sc_daily_activity_steps<-daily_activity |> select(intersect_daily_steps)
# Let's see if the all identical cols has exactly same. (including the values)
identical(sc_daily_activity,sc_daily_intensities)
identical(sc_daily_activity_calories,sc_daily_calories)
identical(sc_daily_steps,sc_daily_activity_steps)
daily_combined_data<-daily_activity |> left_join(daily_sleep, by=c("Id","date","weekday")) |> left_join(daily_mets, by=c("Id","date"))
daily_combined_data<-daily_combined_data |> mutate(activity_level=case_when(
TotalSteps < 5000 ~ "Sedentary",
TotalSteps >= 5000 & TotalSteps<7500 ~ "LightlyActive",
TotalSteps>=7500 & TotalSteps<10000~ "ModerateActive",
TotalSteps>=10000 & TotalSteps <12500~ "Active",
TotalSteps>=12500~ "VeryActive"
))
activity_level<-c("Sedentary","LightlyActive" ,"ModerateActive","Active","VeryActive")
daily_combined_data$activity_level<-factor(daily_combined_data$activity_level,levels = activity_level)
hourly_combined0 <- hourly_calories |> left_join(hourly_intensities, by=c("Id","ActivityHour","Hour","weekday"))
hourly_combined_data <- hourly_combined0 |> left_join(hourly_steps,by=c("Id","ActivityHour","Hour","weekday"))
daily_mean_calories<- daily_combined_data |> group_by(weekday) |>  summarise(daily_mean_calories=mean(Calories)) |> arrange(desc(daily_mean_calories))
ggplot(data = daily_mean_calories, mapping = aes(x=reorder(weekday,daily_mean_calories), y=daily_mean_calories,fill=daily_mean_calories,))+geom_bar(stat = "identity")+
geom_col()+coord_flip()+scale_fill_distiller(palette = "Spectral")+
labs(title = "Figure-1: Daily Average Calories of FitBit User",
subtitle = "Plot of calories per day of week",
x=element_blank(),
y="Avarage Calories")
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2"),
Conclusions = c(
"The users are the most active on Saturday and Tuesday. ",
"The users is tend to rest or stay passive mostly on Thursday and Sunday."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "30em", background ="lightyellow")
caloriesandsteps_byday<- daily_combined_data |> group_by(date) |>drop_na() |>  summarise(avg_step=mean(TotalSteps),avg_calories=mean(Calories),avg_daily_mets=mean(average_daily_mets))
# z_score <- function(x){
#   y <- (x - mean(x)) / sd(x)
#   return(y)
# }
# caloriesandsteps_byday$step_z<-z_score(caloriesandsteps_byday$avg_step)
# caloriesandsteps_byday$avg_calories<-z_score(caloriesandsteps_byday$avg_calories)
# caloriesandsteps_byday$avg_daily_mets<-z_score(caloriesandsteps_byday$avg_daily_mets)
time_series=xts( x=caloriesandsteps_byday[,-1], order.by=caloriesandsteps_byday$date,Sys.Date())
presAnnotation <- function(dygraph, x, text) {
dygraph %>%
dyAnnotation(x, text, attachAtBottom = FALSE, width = 60)
}
p <- dygraph(time_series, main = "Figure-2: Average Step vs Average Calories by day") |>dyOptions(fillGraph = TRUE,fillAlpha = 0.4,colors = RColorBrewer::brewer.pal(3, "Dark2"),useDataTimezone = TRUE) |>  dyRangeSelector()
p
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"Mostly the burnt calories are increasing with the steps, there is an positive realationship.",
"The peak days for calories and steps are generally observed Saturdays.",
"Some data are missing for the last day of the data set (12/05/2016)."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "35em", background ="lightyellow")
corr_data<-daily_combined_data |> select(TotalSteps,TotalDistance,TrackerDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,Calories,activity_level)
ggpairs(daily_combined_data,columns = c(3,4,5,15,20,21),title="Figure-3: Daily correlations 1",ggplot2::aes(colour = activity_level,alpha=0.5),lower = list(combo = "count"),upper = list(continuous = wrap("cor", size=3)))+theme(axis.text.x  = element_text(size = 6, angle = 90),axis.text.y  = element_text(size = 6), text = element_text(size=9))
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"Total steps and total trackers & distances have the positive relationship. ",
"Metabolic Equivalents (METs) in increasing positively with steps and distance especially for sedentary users. In addition METs has a positive relationship with the burnt calories for very active users.",
"bla bla."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "40em", background ="lightyellow")
corgraph<-ggpairs(daily_combined_data,columns = c(18,19,21),title="Figure-3: Daily correlations 2",ggplot2::aes(colour = activity_level,alpha=0.5),lower = list(combo = "count"))
corgraph+theme(axis.text.x  = element_text(size = 6, angle = 90),axis.text.y  = element_text(size = 6), text = element_text(size=8))
ggplot(data=daily_combined_data, mapping = aes(x=TotalTimeInBed, y=TotalMinutesAsleep))+geom_point()+geom_smooth(method="lm")+facet_wrap(~activity_level)+labs(title = "Figure-4: Users Asleep and In Bed Durations (minutes)",x = "Total In Bed Duration", y = "Total Asleep Duration")
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3","Insight 4"),
Conclusions = c(
"The amount of time spent in bed and the number of minutes spent sleeping are strongly positively correlated. (see Figure-3) ",
"The distributions of minutes asleep and time in bed are approximately normally distributed.(see Figure-3)",
"When the activity level is increased, the total in bed duration is decreased. (see Figure-4)",
"The sleep latency is shorter for active users than sedantary users. (see Figure-4)"
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "45em", background ="lightyellow")
hourly_analysis1<-hourly_combined_data |> group_by(weekday,Hour) |> summarise(totalsteps=sum(StepTotal),total_calories=sum(Calories),.groups = 'drop')
ggplot(data=hourly_analysis1)+geom_col(mapping = aes(x=Hour, y=total_calories, fill=totalsteps))+ scale_fill_gradient(low = "lightyellow", high = "red")+facet_wrap(~weekday, ncol = 2 )+labs(title = "Figure-5: Daily Activity by hour", y = "Total Calories")+scale_x_continuous(breaks = 0:23) + theme(axis.text.x = element_text(size = 5))
hourly_analysis2<-hourly_combined_data |> group_by(weekday,Hour) |>
summarise(average_intensity_level=mean(TotalIntensity, na.rm = TRUE),total_calories=sum(Calories))
ggplot(data=hourly_analysis2)+geom_col(mapping = aes(x=Hour, y=average_intensity_level, fill=total_calories))+facet_grid(weekday~.)+scale_fill_distiller(palette = "Spectral")+scale_x_continuous(breaks = 0:23) +labs(title = "Figure-6: Daily Intensity Level by hour", y = "Intensity Level") + theme(axis.text.x = element_text(size = 5)) + theme(panel.background = element_rect(fill = NA),panel.grid.major = element_line(colour = "gray90",
linetype = "dashed"))
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"The majority of activity peak times lie between 5:00 and 8:00 p.m. . ",
"The peak hour for Saturday is 1:30 p.m..",
"For the workdays, users are tend to burn more calories on wednesday between 5:00 and 6:00 p.m.. "
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "45em", background ="lightyellow")
setwd -> dirname -> abs_path
setwd("C:/Users/cemil/OneDrive/Belgeler/GitHub/FitBit_Case_Study/docs/Fitbit_case_study.Rmd")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(tidymodels)
library(lubridate)
library(janitor)
library(ggrepel)
library(skimr)
library(kableExtra)
library(readr)
library(lubridate)
library(openair)
library(psych)
library(DataExplorer)
library(ggpubr)
library(here)
library(formattable)
library(scales)
library(dygraphs)
library(xts)
library(GGally)
setwd("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16")
daily_activity<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
daily_calories<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv")
daily_intensities<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv")
weightloginfo<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
daily_steps<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv")
hourly_calories<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv")
hourly_intensities<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv")
hourly_steps<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv")
heartrate_seconds<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/heartrate_seconds_merged.csv")
daily_sleep<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv")
minute_mets<-read_csv("C:/Users/cemil/Desktop/Case Study/FitBit DataSet/Fitabase Data 4.12.16-5.12.16/minuteMETsNarrow_merged.csv")
#Gathering all datas in a list to analyse all in once:
df_list<-list(daily_activity,daily_calories,daily_intensities,daily_sleep,daily_steps,hourly_calories,hourly_intensities,hourly_steps,weightloginfo,heartrate_seconds,minute_mets)
#Finding distinct_id values
Distinct_id<-df_list |> map(c(1)) |> map_int(n_distinct)
#Finding missing rows
Missing_row <-df_list |>  map_int(n_missing)
#Finding duplicated values
Duplicated_Values<-vector(length = length(df_list))
for(i in 1:length(df_list)){
Duplicated_Values[i]=sum(duplicated(df_list[[i]]))
}
uniq<-data.frame(c("daily_activity","daily_calories","daily_intensities","daily_sleep","daily_steps","hourly_calories","hourly_intensities","hourly_steps","weightloginfo","heartrate_seconds","minute_mets"),Distinct_id,Missing_row,Duplicated_Values)
uniq<-uniq%>% rename(Data_set=colnames(uniq[1]))%>%arrange(-Distinct_id)
kbl(uniq, escape = F) %>%
kable_paper("hover", full_width = F)
#Removing duplicated values in daily_sleep
daily_sleep<-distinct(daily_sleep)
head(daily_activity,5)
str(daily_activity)
head(daily_calories,5)
str(daily_calories)
head(daily_intensities,5)
str(daily_intensities)
head(daily_steps,5)
str(daily_steps)
daily_activity<-daily_activity %>% mutate(ActivityDate=mdy(ActivityDate)) %>% mutate(weekday=wday(ActivityDate,abbr = FALSE, label=TRUE, locale = "EN"))
daily_calories<-daily_calories %>% mutate(ActivityDay=mdy(ActivityDay))%>% mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_intensities<-daily_intensities %>% mutate(ActivityDay=mdy(ActivityDay))%>%mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_sleep<-daily_sleep %>% mutate(SleepDay=mdy_hms(SleepDay)) %>% mutate(weekday=wday(SleepDay,abbr = FALSE, label=TRUE, locale = "EN"))
daily_steps<-daily_steps %>% mutate(ActivityDay=mdy(ActivityDay)) %>% mutate(weekday=wday(ActivityDay,abbr = FALSE, label=TRUE, locale = "EN"))
hourly_calories<-hourly_calories %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour, abbr = FALSE, label=TRUE, locale = "EN"))
hourly_intensities<-hourly_intensities %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour,,abbr = FALSE, label=TRUE, locale = "EN"))
hourly_steps<-hourly_steps %>% mutate(ActivityHour=mdy_hms(ActivityHour)) %>% mutate(Hour=hour(ActivityHour),weekday=wday(ActivityHour, abbr = FALSE,label=TRUE, locale = "EN"))
heartrate_seconds<-heartrate_seconds %>% mutate(Time=mdy_hms(Time)) %>% mutate(Hour=hour(Time),weekday=wday(Time,abbr = FALSE, label=TRUE, locale = "EN"))
daily_mets<-minute_mets |> mutate(ActivityMinute=mdy_hms(ActivityMinute)) |> mutate(ActivityMinute=date(ActivityMinute))|>  mutate(weekday=wday(ActivityMinute,abbr = FALSE, label=TRUE, locale = "EN")) |> rename(date=ActivityMinute) |>
group_by(Id,date) |> summarise(average_daily_mets=round(mean(METs),digits = 0), .groups = "keep")
hourly_mets<-minute_mets |> mutate(ActivityMinute=mdy_hms(ActivityMinute))|> mutate(ActivityMinute=date(ActivityMinute)) |> mutate(hour=hour(ActivityMinute))|>  mutate(weekday=wday(ActivityMinute,abbr = FALSE, label=TRUE, locale = "EN")) |> rename(date=ActivityMinute) |>
group_by(Id,,date,hour) |> summarise(average_hourly_mets=round(mean(METs),digits = 0), .groups = "keep")
#Also we can name the all date columns with same name to make the merging process easy.
daily_activity <-daily_activity |> rename(date=ActivityDate)
daily_calories<-daily_calories |> rename(date=ActivityDay)
daily_intensities<-daily_intensities |> rename(date=ActivityDay)
daily_sleep<-daily_sleep |> rename(date=SleepDay)
daily_steps<-daily_steps |> rename(date=ActivityDay)
dt<- daily_steps[1:5,]
dt
intersect_daily_activity_intensties<- intersect(colnames(daily_activity),colnames(daily_intensities))
intersect_daily_calories<-intersect(colnames(daily_activity),colnames(daily_calories))
daily_steps<-daily_steps |> rename(TotalSteps=StepTotal)
intersect_daily_steps<-intersect(colnames(daily_activity),colnames(daily_steps))
intersect_daily_activity_intensties
intersect_daily_calories
#Let's select the identical columns from both data frame
sc_daily_activity<-daily_activity |> select(intersect_daily_activity_intensties)
sc_daily_intensities<-daily_intensities |> select(intersect_daily_activity_intensties)
sc_daily_calories<-daily_calories |> select(intersect_daily_calories)
sc_daily_activity_calories<-daily_activity |> select(intersect_daily_calories)
sc_daily_steps<-daily_steps |> select(intersect_daily_steps)
sc_daily_activity_steps<-daily_activity |> select(intersect_daily_steps)
# Let's see if the all identical cols has exactly same. (including the values)
identical(sc_daily_activity,sc_daily_intensities)
identical(sc_daily_activity_calories,sc_daily_calories)
identical(sc_daily_steps,sc_daily_activity_steps)
daily_combined_data<-daily_activity |> left_join(daily_sleep, by=c("Id","date","weekday")) |> left_join(daily_mets, by=c("Id","date"))
daily_combined_data<-daily_combined_data |> mutate(activity_level=case_when(
TotalSteps < 5000 ~ "Sedentary",
TotalSteps >= 5000 & TotalSteps<7500 ~ "LightlyActive",
TotalSteps>=7500 & TotalSteps<10000~ "ModerateActive",
TotalSteps>=10000 & TotalSteps <12500~ "Active",
TotalSteps>=12500~ "VeryActive"
))
activity_level<-c("Sedentary","LightlyActive" ,"ModerateActive","Active","VeryActive")
daily_combined_data$activity_level<-factor(daily_combined_data$activity_level,levels = activity_level)
hourly_combined0 <- hourly_calories |> left_join(hourly_intensities, by=c("Id","ActivityHour","Hour","weekday"))
hourly_combined_data <- hourly_combined0 |> left_join(hourly_steps,by=c("Id","ActivityHour","Hour","weekday"))
daily_mean_calories<- daily_combined_data |> group_by(weekday) |>  summarise(daily_mean_calories=mean(Calories)) |> arrange(desc(daily_mean_calories))
ggplot(data = daily_mean_calories, mapping = aes(x=reorder(weekday,daily_mean_calories), y=daily_mean_calories,fill=daily_mean_calories,))+geom_bar(stat = "identity")+
geom_col()+coord_flip()+scale_fill_distiller(palette = "Spectral")+
labs(title = "Figure-1: Daily Average Calories of FitBit User",
subtitle = "Plot of calories per day of week",
x=element_blank(),
y="Avarage Calories")
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2"),
Conclusions = c(
"The users are the most active on Saturday and Tuesday. ",
"The users is tend to rest or stay passive mostly on Thursday and Sunday."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "30em", background ="lightyellow")
caloriesandsteps_byday<- daily_combined_data |> group_by(date) |>drop_na() |>  summarise(avg_step=mean(TotalSteps),avg_calories=mean(Calories),avg_daily_mets=mean(average_daily_mets))
# z_score <- function(x){
#   y <- (x - mean(x)) / sd(x)
#   return(y)
# }
# caloriesandsteps_byday$step_z<-z_score(caloriesandsteps_byday$avg_step)
# caloriesandsteps_byday$avg_calories<-z_score(caloriesandsteps_byday$avg_calories)
# caloriesandsteps_byday$avg_daily_mets<-z_score(caloriesandsteps_byday$avg_daily_mets)
time_series=xts( x=caloriesandsteps_byday[,-1], order.by=caloriesandsteps_byday$date,Sys.Date())
presAnnotation <- function(dygraph, x, text) {
dygraph %>%
dyAnnotation(x, text, attachAtBottom = FALSE, width = 60)
}
p <- dygraph(time_series, main = "Figure-2: Average Step vs Average Calories by day") |>dyOptions(fillGraph = TRUE,fillAlpha = 0.4,colors = RColorBrewer::brewer.pal(3, "Dark2"),useDataTimezone = TRUE) |>  dyRangeSelector()
p
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"Mostly the burnt calories are increasing with the steps, there is an positive realationship.",
"The peak days for calories and steps are generally observed Saturdays.",
"Some data are missing for the last day of the data set (12/05/2016)."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "35em", background ="lightyellow")
corr_data<-daily_combined_data |> select(TotalSteps,TotalDistance,TrackerDistance,VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance,SedentaryActiveDistance,Calories,activity_level)
ggpairs(daily_combined_data,columns = c(3,4,5,15,20,21),title="Figure-3: Daily correlations 1",ggplot2::aes(colour = activity_level,alpha=0.5),lower = list(combo = "count"),upper = list(continuous = wrap("cor", size=3)))+theme(axis.text.x  = element_text(size = 6, angle = 90),axis.text.y  = element_text(size = 6), text = element_text(size=9))
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"Total steps and total trackers & distances have the positive relationship. ",
"Metabolic Equivalents (METs) in increasing positively with steps and distance especially for sedentary users. In addition METs has a positive relationship with the burnt calories for very active users.",
"bla bla."
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "40em", background ="lightyellow")
corgraph<-ggpairs(daily_combined_data,columns = c(18,19,21),title="Figure-3: Daily correlations 2",ggplot2::aes(colour = activity_level,alpha=0.5),lower = list(combo = "count"))
corgraph+theme(axis.text.x  = element_text(size = 6, angle = 90),axis.text.y  = element_text(size = 6), text = element_text(size=8))
ggplot(data=daily_combined_data, mapping = aes(x=TotalTimeInBed, y=TotalMinutesAsleep))+geom_point()+geom_smooth(method="lm")+facet_wrap(~activity_level)+labs(title = "Figure-4: Users Asleep and In Bed Durations (minutes)",x = "Total In Bed Duration", y = "Total Asleep Duration")
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3","Insight 4"),
Conclusions = c(
"The amount of time spent in bed and the number of minutes spent sleeping are strongly positively correlated. (see Figure-3) ",
"The distributions of minutes asleep and time in bed are approximately normally distributed.(see Figure-3)",
"When the activity level is increased, the total in bed duration is decreased. (see Figure-4)",
"The sleep latency is shorter for active users than sedantary users. (see Figure-4)"
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "45em", background ="lightyellow")
hourly_analysis1<-hourly_combined_data |> group_by(weekday,Hour) |> summarise(totalsteps=sum(StepTotal),total_calories=sum(Calories),.groups = 'drop')
ggplot(data=hourly_analysis1)+geom_col(mapping = aes(x=Hour, y=total_calories, fill=totalsteps))+ scale_fill_gradient(low = "lightyellow", high = "red")+facet_wrap(~weekday, ncol = 2 )+labs(title = "Figure-5: Daily Activity by hour", y = "Total Calories")+scale_x_continuous(breaks = 0:23) + theme(axis.text.x = element_text(size = 5))
hourly_analysis2<-hourly_combined_data |> group_by(weekday,Hour) |>
summarise(average_intensity_level=mean(TotalIntensity, na.rm = TRUE),total_calories=sum(Calories))
ggplot(data=hourly_analysis2)+geom_col(mapping = aes(x=Hour, y=average_intensity_level, fill=total_calories))+facet_grid(weekday~.)+scale_fill_distiller(palette = "Spectral")+scale_x_continuous(breaks = 0:23) +labs(title = "Figure-6: Daily Intensity Level by hour", y = "Intensity Level") + theme(axis.text.x = element_text(size = 5)) + theme(panel.background = element_rect(fill = NA),panel.grid.major = element_line(colour = "gray90",
linetype = "dashed"))
text_tbl <- data.frame(
Insights = c("Insight 1", "Insight 2","Insight 3"),
Conclusions = c(
"The majority of activity peak times lie between 5:00 and 8:00 p.m. . ",
"The peak hour for Saturday is 1:30 p.m..",
"For the workdays, users are tend to burn more calories on wednesday between 5:00 and 6:00 p.m.. "
)
)
kbl(text_tbl) %>%
kable_paper(full_width = F) %>%
column_spec(1, bold = T,italic = T, border_right = T) %>%
column_spec(2, width = "45em", background ="lightyellow")
gc()
